def get_maximum(arr):
    return max(arr)

def get_minimum(arr):
    return min(arr)

def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return True

def count_primes(arr):
    return sum(is_prime(num) for num in arr)

def is_palindrome(num):
    return str(num) == str(num)[::-1]

def count_palindromes(arr):
    return sum(is_palindrome(num) for num in arr)

def count_divisors(num):
    count = 0
    for i in range(1, int(num ** 0.5) + 1):
        if num % i == 0:
            count += 1
            if i != num // i:  # If both divisors are not the same (i.e., sqrt(num))
                count += 1
    return count

def max_divisors_number(arr):
    max_divisors = 0
    max_divisors_number = -1
    for num in arr:
        div_count = count_divisors(num)
        if div_count > max_divisors:
            max_divisors = div_count
            max_divisors_number = num
        elif div_count == max_divisors and num > max_divisors_number:
            max_divisors_number = num
    return max_divisors_number

# Input
N = int(input())
A = list(map(int, input().split()))

# Calculations
max_val = get_maximum(A)
min_val = get_minimum(A)
prime_count = count_primes(A)
palindrome_count = count_palindromes(A)
max_divisors_num = max_divisors_number(A)

# Output
print(f"The maximum number : {max_val}")
print(f"The minimum number : {min_val}")
print(f"The number of prime numbers : {prime_count}")
print(f"The number of palindrome numbers : {palindrome_count}")
print(f"The number that has the maximum number of divisors : {max_divisors_num}")
